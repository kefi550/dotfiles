[[plugins]]
repo = 'Shougo/dein.vim'

# airline
######################################################################
[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add='''
  let g:airline#extensions#tabline#enabled = 1
  let g:airline#extensions#tabline#formatter = 'default'
  let g:airline_theme='molokai'
'''
######################################################################

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_post_update = '''
  let g:quickrun_config = {
  \     '*': {'hook/time/enable': '1'},
  \    'json': {
  \        'outputter/buffer/filetype': 'json',
  \        'command': 'jq',
  \        'cmdopt': '.',
  \        'exec': 'cat %s | sed -z "s/\n//g" | %c %o',
  \    }
  \}
'''

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
 
[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'ryanoasis/vim-devicons'

# ã‚«ãƒƒã‚³è£œå®Œ
[[plugins]]
repo = 'Townk/vim-autoclose'

[[plugins]]
repo = 'tpope/vim-surround'

# LSP
[[plugins]]
repo = 'prabirshrestha/asyncomplete-buffer.vim'
# on_ft = ['autohotkey', 'autoit', 'cfg', 'git', 'go', 'groovy', 'java', 'javascript', 'python', 'sh', 'snippet', 'toml', 'vim', 'vb', 'xsl']
depends = ['asyncomplete.vim']
hook_add = '''
  call asyncomplete#register_source(asyncomplete#sources#buffer#get_source_options({
    \ 'name': 'buffer',
    \ 'priority': 5,
    \ 'whitelist': ['*'],
    \ 'completor': function('asyncomplete#sources#buffer#completor'),
  \ }))
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-file.vim'
depends = ['asyncomplete.vim']
hook_add = '''
  call asyncomplete#register_source(asyncomplete#sources#file#get_source_options({
    \ 'name': 'file',
    \ 'whitelist': ['*'],
    \ 'priority': 10,
    \ 'completor': function('asyncomplete#sources#file#completor')
    \ }))
'''
## LSP
[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
  let g:lsp_diagnostics_signs_warning = {'text': 'ðŸ’©'}
  let g:lsp_diagnostics_signs_error = {'text': 'ðŸ’©'}

  let g:lsp_diagnostics_enabled = 1
  let g:lsp_diagnostics_echo_cursor = 1
  let g:lsp_diagnostics_float_cursor = 0
  " let g:lsp_diagnostics_virtual_text_enabled = 0

  " debug
  " let g:lsp_log_verbose = 1
  " let g:lsp_log_file = expand('~/vim-lsp.log')

  let g:lsp_async_completion = 1

  " let g:lsp_preview_max_height = 1
  " let g:lsp_preview_max_width = 1
  let g:lsp_signature_help_enabled = 1

  let g:lsp_preview_autoclose = 1
  let g:lsp_preview_keep_focus = 1
  let g:lsp_preview_doubletap = 0
  let g:lsp_highlight_references_enabled = 1
  let g:lsp_highlights_enabled = 1
  let g:lsp_insert_text_enabled = 0
  let g:lsp_async_completion = 1
  let g:lsp_auto_enable = 1
  let g:lsp_text_edit_enabled = 0
  let g:lsp_virtual_text_enabled = 0
  let g:lsp_textprop_enabled = 0
  let g:lsp_fold_enabled = 1

  nmap <leader>ld <plug>(lsp-definition)
  nmap <leader>lf <plug>(lsp-preview-focus)
  nmap <leader>lc <plug>(lsp-preview-close)
  nmap <leader>lh <plug>(lsp-hover-float)
  nmap <leader>lp <plug>(lsp-hover-preview)
  nmap <leader>ln <plug>(lsp-previous-diagnostic)
  " nnoremap <leader>lr :call LanguageClient#textDocument_rename()<CR>
  " nnoremap <leader>lf :call LanguageClient#textDocument_formatting()<CR>
  " nnoremap <leader>lt :call LanguageClient#textDocument_typeDefinition()<CR>
  " nnoremap <leader>lx :call LanguageClient#textDocument_references()<CR>
  " nnoremap <leader>la :call LanguageClient_workspace_applyEdit()<CR>
  " nnoremap <leader>lc :call LanguageClient#textDocument_completion()<CR>
  " nnoremap <leader>lh :call LanguageClient#textDocument_hover()<CR>
  " nnoremap <leader>ls :call LanguageClient_textDocument_documentSymbol()<CR>
  " nnoremap <leader>lm :call LanguageClient_contextMenu()<CR>
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
#on_event=['InsertEnter']
# on_ft = ['sh', 'autohotkey', 'autoit', 'cfg', 'git', 'go', 'groovy', 'java', 'javascript', 'python', 'snippet', 'terraform', 'tf', 'toml', 'vim', 'vb', 'xsl', 'html']
hook_add = '''
  " let g:asyncomplete_log_file = expand('~/asyncomplete.log')
  let g:asyncomplete_auto_popup = 1
  let g:asyncomplete_popup_delay = 0
  let g:asyncomplete_auto_completeopt = 1
  let g:asyncomplete_remove_duplicates = 1
  let g:asyncomplete_smart_completion = 1
  " set completeopt-=preview
  set completeopt=menuone
  " let g:asyncomplete_enable_for_all = 0
  " autocmd vimrc FileType autohotkey,autoit,cfg,git,go,groovy,java,javascript,python,snippet,toml,vim,vb,xsl call asyncomplete#enable_for_buffer()"
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
# on_ft = ['python', 'go', 'sh', 'html', 'terraform', 'tf']
depends = ['asyncomplete.vim', 'vim-lsp']

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'mattn/vim-lsp-settings'
